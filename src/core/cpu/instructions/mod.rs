mod arithmetics;
mod bit;
mod control;
mod ld;
mod misc;
pub mod stack;

use crate::core::cpu::cpu::LR35902CPU;
use arithmetics::*;
use bit::*;
use control::*;
use ld::*;
use misc::*;
use stack::*;

#[allow(nonstandard_style)]
#[derive(PartialEq)]
pub enum AddrMode {
    R,
    R_R,
    R_IMM,
    R_RADDR,
    R_IMMADDR,
    RADDR,
    RADDR_R,
    RADDR_IMM,
    R16,
    R16_R16,
    R16_SIMM,
    R16_IMM16,
    R16_R16_IMM,
    IMM_R,
    IMMADDR,
    IMM_RADDR,
    IMMADDR_R,
    IMMADDR_R16,
    SIMM,
}

#[derive(PartialEq)]
pub enum CondType {
    Nz,
    Z,
    Nc,
    C,
}

#[derive(PartialEq, PartialOrd, Clone, Copy, Debug)]
pub enum CPURegisterId {
    A,
    F,
    B,
    C,
    D,
    E,
    H,
    L,
    AF,
    BC,
    DE,
    HL,
    PC,
    SP,
}

type FnType = fn(&mut LR35902CPU) -> u8;

#[derive(PartialEq)]
pub struct Instruction {
    pub name: &'static str,
    pub addr_mode: AddrMode,
    pub func: FnType,
    pub condition: Option<CondType>,
    pub reg1: Option<CPURegisterId>,
    pub reg2: Option<CPURegisterId>,
}

impl Instruction {
    pub const fn default() -> Self {
        Self {
            name: "ILLEGAL",
            addr_mode: AddrMode::R_R,
            func: |_| 1,
            condition: None,
            reg1: None,
            reg2: None,
        }
    }
}

#[rustfmt::skip]
pub static INSTRUCTIONS: [Instruction; 0x200] = [
    Instruction { name: "NOP", addr_mode: AddrMode::R_R, func: |_| {1}, ..Instruction::default() },
    Instruction { name: "LD", addr_mode: AddrMode::R16_IMM16, func: ldr, reg1: Some(CPURegisterId::BC), reg2: None, ..Instruction::default() },
    Instruction { name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::BC), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "INC", addr_mode: AddrMode::R16, func: inc, reg1: Some(CPURegisterId::BC), ..Instruction::default() },
    Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::B), reg2: None, ..Instruction::default() },
    Instruction {  name: "RLCA", addr_mode: AddrMode::R, func: rlca, ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::IMMADDR_R16, func: ldm, reg1: None, reg2: Some(CPURegisterId::SP), ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R16_R16, func: add, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::BC), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::BC), ..Instruction::default() },
    Instruction {  name: "DEC", addr_mode: AddrMode::R16, func: dec, reg1: Some(CPURegisterId::BC), ..Instruction::default() },
    Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::C), reg2: None, ..Instruction::default() },
    Instruction {  name: "RRCA", addr_mode: AddrMode::R, func: rrca, ..Instruction::default() },
    Instruction {  name: "STOP", addr_mode: AddrMode::R, func: stop, reg1: None, ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R16_IMM16, func: ldr, reg1: Some(CPURegisterId::DE), reg2: None, ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::DE), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "INC", addr_mode: AddrMode::R16, func: inc, reg1: Some(CPURegisterId::DE), ..Instruction::default() },
    Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::D), reg2: None, ..Instruction::default() },
    Instruction {  name: "RLA", addr_mode: AddrMode::R, func: rla, ..Instruction::default() },
    Instruction {  name: "JR", addr_mode: AddrMode::SIMM, func: jr, reg1: None, ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R16_R16, func: add, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::DE), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::DE), ..Instruction::default() },
    Instruction {  name: "DEC", addr_mode: AddrMode::R16, func: dec, reg1: Some(CPURegisterId::DE), ..Instruction::default() },
    Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::E), reg2: None, ..Instruction::default() },
    Instruction {  name: "RRA", addr_mode: AddrMode::R, func: rra, ..Instruction::default() },
    Instruction {  name: "JR", addr_mode: AddrMode::SIMM, func: jr, condition: Some(CondType::Nz), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R16_IMM16, func: ldr, reg1: Some(CPURegisterId::HL), reg2: None, ..Instruction::default() },
    Instruction {  name: "LDI", addr_mode: AddrMode::RADDR_R, func: ldi, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "INC", addr_mode: AddrMode::R16, func: inc, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::H), reg2: None, ..Instruction::default() },
    Instruction {  name: "DAA", addr_mode: AddrMode::R, func: daa, ..Instruction::default() },
    Instruction {  name: "JR", addr_mode: AddrMode::SIMM, func: jr, condition: Some(CondType::Z), ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R16_R16, func: add, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "LDI", addr_mode: AddrMode::R_RADDR, func: ldi, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "DEC", addr_mode: AddrMode::R16, func: dec, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::L), reg2: None, ..Instruction::default() },
    Instruction {  name: "CPL", addr_mode: AddrMode::R, func: cpl, ..Instruction::default() },
    Instruction {  name: "JR", addr_mode: AddrMode::SIMM, func: jr, condition: Some(CondType::Nc), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R16_IMM16, func: ldr, reg1: Some(CPURegisterId::SP), reg2: None, ..Instruction::default() },
    Instruction {  name: "LDD", addr_mode: AddrMode::RADDR_R, func: ldd, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "INC", addr_mode: AddrMode::R16, func: inc, reg1: Some(CPURegisterId::SP), ..Instruction::default() },
    Instruction {  name: "INC", addr_mode: AddrMode::RADDR, func: inc, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "DEC", addr_mode: AddrMode::RADDR, func: dec, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::RADDR_IMM, func: ldm, reg1: Some(CPURegisterId::HL), reg2: None, ..Instruction::default() },
    Instruction {  name: "SCF", addr_mode: AddrMode::R, func: scf, ..Instruction::default() },
    Instruction {  name: "JR", addr_mode: AddrMode::SIMM, func: jr, condition: Some(CondType::C), ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R16_R16, func: add, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::SP), ..Instruction::default() },
    Instruction {  name: "LDD", addr_mode: AddrMode::R_RADDR, func: ldd, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "DEC", addr_mode: AddrMode::R16, func: dec, reg1: Some(CPURegisterId::SP), ..Instruction::default() },
    Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    Instruction {  name: "CCF", addr_mode: AddrMode::R, func: ccf, ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "HALT", addr_mode: AddrMode::R, func: halt, ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R_RADDR, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "ADC", addr_mode: AddrMode::R_RADDR, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "SUB", addr_mode: AddrMode::R_RADDR, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "SBC", addr_mode: AddrMode::R_RADDR, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "AND", addr_mode: AddrMode::R_RADDR, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "XOR", addr_mode: AddrMode::R_RADDR, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "OR", addr_mode: AddrMode::R_RADDR, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction {  name: "CP", addr_mode: AddrMode::R_RADDR, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "RET", addr_mode: AddrMode::R, func: ret, condition: Some(CondType::Nz), ..Instruction::default() },
    Instruction {  name: "POP", addr_mode: AddrMode::R16, func: pop, reg1: Some(CPURegisterId::BC), ..Instruction::default() },
    Instruction {  name: "JP", addr_mode: AddrMode::IMMADDR, func: jp, condition: Some(CondType::Nz), ..Instruction::default() },
    Instruction {  name: "JP", addr_mode: AddrMode::IMMADDR, func: jp, ..Instruction::default() },
    Instruction {  name: "CALL", addr_mode: AddrMode::IMMADDR, func: call, condition: Some(CondType::Nz), ..Instruction::default() },
    Instruction {  name: "PUSH", addr_mode: AddrMode::R16, func: push, reg1: Some(CPURegisterId::BC), ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R_IMM, func: add, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "RST", addr_mode: AddrMode::R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x00) }, ..Instruction::default() },
    Instruction {  name: "RET", addr_mode: AddrMode::R, func: ret, condition: Some(CondType::Z), ..Instruction::default() },
    Instruction {  name: "RET", addr_mode: AddrMode::R, func: ret, ..Instruction::default() },
    Instruction {  name: "JP", addr_mode: AddrMode::IMMADDR, func: jp, condition: Some(CondType::Z), ..Instruction::default() },
    Instruction::default(),
    Instruction {  name: "CALL", addr_mode: AddrMode::IMMADDR, func: call, condition: Some(CondType::Z), ..Instruction::default() },
    Instruction {  name: "CALL", addr_mode: AddrMode::IMMADDR, func: call, reg1: None, ..Instruction::default() },
    Instruction {  name: "ADC", addr_mode: AddrMode::R_IMM, func: adc, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "RST", addr_mode: AddrMode::R_R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x08) }, reg1: None, ..Instruction::default() },
    Instruction {  name: "RET", addr_mode: AddrMode::R, func: ret, condition: Some(CondType::Nc), ..Instruction::default() },
    Instruction {  name: "POP", addr_mode: AddrMode::R16, func: pop, reg1: Some(CPURegisterId::DE), ..Instruction::default() },
    Instruction {  name: "JP", addr_mode: AddrMode::IMMADDR, func: jp, condition: Some(CondType::Nc), ..Instruction::default() },
    Instruction::default(),
    Instruction {  name: "CALL", addr_mode: AddrMode::IMMADDR, func: call, condition: Some(CondType::Nc), ..Instruction::default() },
    Instruction {  name: "PUSH", addr_mode: AddrMode::R16, func: push, reg1: Some(CPURegisterId::DE), ..Instruction::default() },
    Instruction {  name: "SUB", addr_mode: AddrMode::R_IMM, func: sub, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    Instruction {  name: "RST", addr_mode: AddrMode::R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x10) }, ..Instruction::default() },
    Instruction {  name: "RET", addr_mode: AddrMode::R, func: ret, condition: Some(CondType::C), ..Instruction::default() },
    Instruction {  name: "RETI", addr_mode: AddrMode::R, func: reti, ..Instruction::default() },
    Instruction {  name: "JP", addr_mode: AddrMode::IMMADDR, func: jp, condition: Some(CondType::C), ..Instruction::default() },
    Instruction::default(),
    Instruction {  name: "CALL", addr_mode: AddrMode::IMMADDR, func: call, condition: Some(CondType::C), ..Instruction::default() },
    Instruction::default(),
    Instruction {  name: "SBC", addr_mode: AddrMode::R_IMM, func: sbc, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "RST", addr_mode: AddrMode::R_R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x18) }, reg1: None, ..Instruction::default() },
    Instruction {  name: "LDH", addr_mode: AddrMode::IMM_R, func: ldh, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction {  name: "POP", addr_mode: AddrMode::R16, func: pop, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "LDH", addr_mode: AddrMode::RADDR_R, func: ldh, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction::default(),
    Instruction::default(),
    Instruction {  name: "PUSH", addr_mode: AddrMode::R16, func: push, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "AND", addr_mode: AddrMode::R_IMM, func: and, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    Instruction {  name: "RST", addr_mode: AddrMode::R_R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x20) }, reg1: None, ..Instruction::default() },
    Instruction {  name: "ADD", addr_mode: AddrMode::R16_SIMM, func: add, reg1: Some(CPURegisterId::SP), reg2: None, ..Instruction::default() },
    Instruction {  name: "JP", addr_mode: AddrMode::R16, func: jp, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::IMMADDR_R, func: ldm, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction::default(),
    Instruction::default(),
    Instruction::default(),
    Instruction {  name: "XOR", addr_mode: AddrMode::R_IMM, func: xor, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    Instruction {  name: "RST", addr_mode: AddrMode::R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x28) }, reg1: None, ..Instruction::default() },
    Instruction {  name: "LDH", addr_mode: AddrMode::R_IMMADDR, func: ldh, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    Instruction {  name: "POP", addr_mode: AddrMode::R16, func: pop, reg1: Some(CPURegisterId::AF), ..Instruction::default() },
    Instruction {  name: "LDH", addr_mode: AddrMode::R_RADDR, func: ldh, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction {  name: "DI", addr_mode: AddrMode::R_R, func: di, ..Instruction::default() },
    Instruction::default(),
    Instruction {  name: "PUSH", addr_mode: AddrMode::R16, func: push, reg1: Some(CPURegisterId::AF), ..Instruction::default() },
    Instruction {  name: "OR", addr_mode: AddrMode::R_IMM, func: or, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    Instruction {  name: "RST", addr_mode: AddrMode::R_R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x30) }, reg1: None, ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R16_R16_IMM, func: ldr, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::SP), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R16_R16, func: ldr, reg1: Some(CPURegisterId::SP), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction {  name: "LD", addr_mode: AddrMode::R_IMMADDR, func: ldr, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    Instruction {  name: "EI", addr_mode: AddrMode::R_R, func: ei, ..Instruction::default() },
    Instruction::default(),
    Instruction::default(),
    Instruction {  name: "CP", addr_mode: AddrMode::R_IMM, func: cp, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    Instruction {  name: "RST", addr_mode: AddrMode::R_R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x38) }, reg1: None, ..Instruction::default() },
    Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "RLC", addr_mode: AddrMode::RADDR, func: rlc, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "RRC", addr_mode: AddrMode::RADDR, func: rrc, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "RL", addr_mode: AddrMode::RADDR, func: rl, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "RR", addr_mode: AddrMode::RADDR, func: rr, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "SLA", addr_mode: AddrMode::RADDR, func: sla, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "SRA", addr_mode: AddrMode::RADDR, func: sra, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "SWAP", addr_mode: AddrMode::RADDR, func: swap, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "SRL", addr_mode: AddrMode::RADDR, func: srl, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
];
