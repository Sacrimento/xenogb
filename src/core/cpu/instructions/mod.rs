mod arithmetics;
mod bit;
mod control;
mod ld;
mod misc;
pub mod stack;

use crate::core::cpu::cpu::LR35902CPU;
use arithmetics::*;
use bit::*;
use control::*;
use ld::*;
use misc::*;
use stack::*;

use phf::phf_map;

#[allow(nonstandard_style)]
pub enum AddrMode {
    R,
    R_R,
    R_IMM,
    R_RADDR,
    R_IMMADDR,
    RADDR,
    RADDR_R,
    RADDR_IMM,
    R16,
    R16_R16,
    R16_SIMM,
    R16_IMM16,
    R16_R16_IMM,
    IMM_R,
    IMMADDR,
    IMM_RADDR,
    IMMADDR_R,
    IMMADDR_R16,
    SIMM,
}

pub enum CondType {
    Nz,
    Z,
    Nc,
    C,
}

#[derive(PartialEq, PartialOrd, Clone, Copy, Debug)]
pub enum CPURegisterId {
    A,
    F,
    B,
    C,
    D,
    E,
    H,
    L,
    AF,
    BC,
    DE,
    HL,
    PC,
    SP,
}

type FnType = fn(&mut LR35902CPU) -> u8;

pub struct Instruction {
    pub name: &'static str,
    pub addr_mode: AddrMode,
    pub func: FnType,
    pub condition: Option<CondType>,
    pub reg1: Option<CPURegisterId>,
    pub reg2: Option<CPURegisterId>,
}

impl Instruction {
    const fn default() -> Self {
        Self {
            name: "",
            addr_mode: AddrMode::R_R,
            func: |_| 1,
            condition: None,
            reg1: None,
            reg2: None,
        }
    }
}

pub static INSTRUCTIONS: phf::Map<u16, Instruction> = phf_map! {
    0x00u16 => Instruction { name: "NOP", addr_mode: AddrMode::R_R, func: |_| {1}, ..Instruction::default() },
    0x01u16 => Instruction { name: "LD", addr_mode: AddrMode::R16_IMM16, func: ldr, reg1: Some(CPURegisterId::BC), reg2: None, ..Instruction::default() },
    0x02u16 => Instruction { name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::BC), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x03u16 => Instruction {  name: "INC", addr_mode: AddrMode::R16, func: inc, reg1: Some(CPURegisterId::BC), ..Instruction::default() },
    0x04u16 => Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    0x05u16 => Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    0x06u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::B), reg2: None, ..Instruction::default() },
    0x07u16 => Instruction {  name: "RLCA", addr_mode: AddrMode::R, func: rlca, ..Instruction::default() },
    0x08u16 => Instruction {  name: "LD", addr_mode: AddrMode::IMMADDR_R16, func: ldm, reg1: None, reg2: Some(CPURegisterId::SP), ..Instruction::default() },
    0x09u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R16_R16, func: add, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::BC), ..Instruction::default() },
    0x0Au16 => Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::BC), ..Instruction::default() },
    0x0Bu16 => Instruction {  name: "DEC", addr_mode: AddrMode::R16, func: dec, reg1: Some(CPURegisterId::BC), ..Instruction::default() },
    0x0Cu16 => Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    0x0Du16 => Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    0x0Eu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::C), reg2: None, ..Instruction::default() },
    0x0Fu16 => Instruction {  name: "RRCA", addr_mode: AddrMode::R, func: rrca, ..Instruction::default() },
    0x10u16 => Instruction {  name: "STOP", addr_mode: AddrMode::R, func: stop, reg1: None, ..Instruction::default() },
    0x11u16 => Instruction {  name: "LD", addr_mode: AddrMode::R16_IMM16, func: ldr, reg1: Some(CPURegisterId::DE), reg2: None, ..Instruction::default() },
    0x12u16 => Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::DE), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x13u16 => Instruction {  name: "INC", addr_mode: AddrMode::R16, func: inc, reg1: Some(CPURegisterId::DE), ..Instruction::default() },
    0x14u16 => Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    0x15u16 => Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    0x16u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::D), reg2: None, ..Instruction::default() },
    0x17u16 => Instruction {  name: "RLA", addr_mode: AddrMode::R, func: rla, ..Instruction::default() },
    0x18u16 => Instruction {  name: "JR", addr_mode: AddrMode::SIMM, func: jr, reg1: None, ..Instruction::default() },
    0x19u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R16_R16, func: add, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::DE), ..Instruction::default() },
    0x1Au16 => Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::DE), ..Instruction::default() },
    0x1Bu16 => Instruction {  name: "DEC", addr_mode: AddrMode::R16, func: dec, reg1: Some(CPURegisterId::DE), ..Instruction::default() },
    0x1Cu16 => Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    0x1Du16 => Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    0x1Eu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::E), reg2: None, ..Instruction::default() },
    0x1Fu16 => Instruction {  name: "RRA", addr_mode: AddrMode::R, func: rra, ..Instruction::default() },
    0x20u16 => Instruction {  name: "JR", addr_mode: AddrMode::SIMM, func: jr, condition: Some(CondType::Nz), ..Instruction::default() },
    0x21u16 => Instruction {  name: "LD", addr_mode: AddrMode::R16_IMM16, func: ldr, reg1: Some(CPURegisterId::HL), reg2: None, ..Instruction::default() },
    0x22u16 => Instruction {  name: "LDI", addr_mode: AddrMode::RADDR_R, func: ldi, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x23u16 => Instruction {  name: "INC", addr_mode: AddrMode::R16, func: inc, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0x24u16 => Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    0x25u16 => Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    0x26u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::H), reg2: None, ..Instruction::default() },
    0x27u16 => Instruction {  name: "DAA", addr_mode: AddrMode::R, func: daa, ..Instruction::default() },
    0x28u16 => Instruction {  name: "JR", addr_mode: AddrMode::SIMM, func: jr, condition: Some(CondType::Z), ..Instruction::default() },
    0x29u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R16_R16, func: add, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x2Au16 => Instruction {  name: "LDI", addr_mode: AddrMode::R_RADDR, func: ldi, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x2Bu16 => Instruction {  name: "DEC", addr_mode: AddrMode::R16, func: dec, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0x2Cu16 => Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    0x2Du16 => Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    0x2Eu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::L), reg2: None, ..Instruction::default() },
    0x2Fu16 => Instruction {  name: "CPL", addr_mode: AddrMode::R, func: cpl, ..Instruction::default() },
    0x30u16 => Instruction {  name: "JR", addr_mode: AddrMode::SIMM, func: jr, condition: Some(CondType::Nc), ..Instruction::default() },
    0x31u16 => Instruction {  name: "LD", addr_mode: AddrMode::R16_IMM16, func: ldr, reg1: Some(CPURegisterId::SP), reg2: None, ..Instruction::default() },
    0x32u16 => Instruction {  name: "LDD", addr_mode: AddrMode::RADDR_R, func: ldd, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x33u16 => Instruction {  name: "INC", addr_mode: AddrMode::R16, func: inc, reg1: Some(CPURegisterId::SP), ..Instruction::default() },
    0x34u16 => Instruction {  name: "INC", addr_mode: AddrMode::RADDR, func: inc, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0x35u16 => Instruction {  name: "DEC", addr_mode: AddrMode::RADDR, func: dec, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0x36u16 => Instruction {  name: "LD", addr_mode: AddrMode::RADDR_IMM, func: ldm, reg1: Some(CPURegisterId::HL), reg2: None, ..Instruction::default() },
    0x37u16 => Instruction {  name: "SCF", addr_mode: AddrMode::R, func: scf, ..Instruction::default() },
    0x38u16 => Instruction {  name: "JR", addr_mode: AddrMode::SIMM, func: jr, condition: Some(CondType::C), ..Instruction::default() },
    0x39u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R16_R16, func: add, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::SP), ..Instruction::default() },
    0x3Au16 => Instruction {  name: "LDD", addr_mode: AddrMode::R_RADDR, func: ldd, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x3Bu16 => Instruction {  name: "DEC", addr_mode: AddrMode::R16, func: dec, reg1: Some(CPURegisterId::SP), ..Instruction::default() },
    0x3Cu16 => Instruction {  name: "INC", addr_mode: AddrMode::R, func: inc, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    0x3Du16 => Instruction {  name: "DEC", addr_mode: AddrMode::R, func: dec, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    0x3Eu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_IMM, func: ldr, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    0x3Fu16 => Instruction {  name: "CCF", addr_mode: AddrMode::R, func: ccf, ..Instruction::default() },
    0x40u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x41u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x42u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x43u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x44u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x45u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x46u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x47u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::B), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x48u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x49u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x4Au16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x4Bu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x4Cu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x4Du16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x4Eu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x4Fu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x50u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x51u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x52u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x53u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x54u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x55u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x56u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x57u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::D), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x58u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x59u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x5Au16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x5Bu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x5Cu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x5Du16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x5Eu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x5Fu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::E), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x60u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x61u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x62u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x63u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x64u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x65u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x66u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x67u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::H), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x68u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x69u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x6Au16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x6Bu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x6Cu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x6Du16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x6Eu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x6Fu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::L), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x70u16 => Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x71u16 => Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x72u16 => Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x73u16 => Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x74u16 => Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x75u16 => Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x76u16 => Instruction {  name: "HALT", addr_mode: AddrMode::R, func: halt, ..Instruction::default() },
    0x77u16 => Instruction {  name: "LD", addr_mode: AddrMode::RADDR_R, func: ldm, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x78u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x79u16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x7Au16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x7Bu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x7Cu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x7Du16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x7Eu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_RADDR, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x7Fu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_R, func: ldr, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x80u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x81u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x82u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x83u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x84u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x85u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x86u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R_RADDR, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x87u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R_R, func: add, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x88u16 => Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x89u16 => Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x8Au16 => Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x8Bu16 => Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x8Cu16 => Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x8Du16 => Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x8Eu16 => Instruction {  name: "ADC", addr_mode: AddrMode::R_RADDR, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x8Fu16 => Instruction {  name: "ADC", addr_mode: AddrMode::R_R, func: adc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x90u16 => Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x91u16 => Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x92u16 => Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x93u16 => Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x94u16 => Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x95u16 => Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x96u16 => Instruction {  name: "SUB", addr_mode: AddrMode::R_RADDR, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x97u16 => Instruction {  name: "SUB", addr_mode: AddrMode::R_R, func: sub, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x98u16 => Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x99u16 => Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x9Au16 => Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x9Bu16 => Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x9Cu16 => Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x9Du16 => Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x9Eu16 => Instruction {  name: "SBC", addr_mode: AddrMode::R_RADDR, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x9Fu16 => Instruction {  name: "SBC", addr_mode: AddrMode::R_R, func: sbc, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0xA0u16 => Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0xA1u16 => Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0xA2u16 => Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0xA3u16 => Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0xA4u16 => Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0xA5u16 => Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0xA6u16 => Instruction {  name: "AND", addr_mode: AddrMode::R_RADDR, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0xA7u16 => Instruction {  name: "AND", addr_mode: AddrMode::R_R, func: and, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0xA8u16 => Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0xA9u16 => Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0xAAu16 => Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0xABu16 => Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0xACu16 => Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0xADu16 => Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0xAEu16 => Instruction {  name: "XOR", addr_mode: AddrMode::R_RADDR, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0xAFu16 => Instruction {  name: "XOR", addr_mode: AddrMode::R_R, func: xor, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0xB0u16 => Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0xB1u16 => Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0xB2u16 => Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0xB3u16 => Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0xB4u16 => Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0xB5u16 => Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0xB6u16 => Instruction {  name: "OR", addr_mode: AddrMode::R_RADDR, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0xB7u16 => Instruction {  name: "OR", addr_mode: AddrMode::R_R, func: or, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0xB8u16 => Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0xB9u16 => Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0xBAu16 => Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0xBBu16 => Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0xBCu16 => Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0xBDu16 => Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0xBEu16 => Instruction {  name: "CP", addr_mode: AddrMode::R_RADDR, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0xBFu16 => Instruction {  name: "CP", addr_mode: AddrMode::R_R, func: cp, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0xC0u16 => Instruction {  name: "RET", addr_mode: AddrMode::R, func: ret, condition: Some(CondType::Nz), ..Instruction::default() },
    0xC1u16 => Instruction {  name: "POP", addr_mode: AddrMode::R16, func: pop, reg1: Some(CPURegisterId::BC), ..Instruction::default() },
    0xC2u16 => Instruction {  name: "JP", addr_mode: AddrMode::IMMADDR, func: jp, condition: Some(CondType::Nz), ..Instruction::default() },
    0xC3u16 => Instruction {  name: "JP", addr_mode: AddrMode::IMMADDR, func: jp, ..Instruction::default() },
    0xC4u16 => Instruction {  name: "CALL", addr_mode: AddrMode::IMMADDR, func: call, condition: Some(CondType::Nz), ..Instruction::default() },
    0xC5u16 => Instruction {  name: "PUSH", addr_mode: AddrMode::R16, func: push, reg1: Some(CPURegisterId::BC), ..Instruction::default() },
    0xC6u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R_IMM, func: add, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    0xC7u16 => Instruction {  name: "RST", addr_mode: AddrMode::R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x00) }, ..Instruction::default() },
    0xC8u16 => Instruction {  name: "RET", addr_mode: AddrMode::R, func: ret, condition: Some(CondType::Z), ..Instruction::default() },
    0xC9u16 => Instruction {  name: "RET", addr_mode: AddrMode::R, func: ret, ..Instruction::default() },
    0xCAu16 => Instruction {  name: "JP", addr_mode: AddrMode::IMMADDR, func: jp, condition: Some(CondType::Z), ..Instruction::default() },
    0xCCu16 => Instruction {  name: "CALL", addr_mode: AddrMode::IMMADDR, func: call, condition: Some(CondType::Z), ..Instruction::default() },
    0xCDu16 => Instruction {  name: "CALL", addr_mode: AddrMode::IMMADDR, func: call, reg1: None, ..Instruction::default() },
    0xCEu16 => Instruction {  name: "ADC", addr_mode: AddrMode::R_IMM, func: adc, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    0xCFu16 => Instruction {  name: "RST", addr_mode: AddrMode::R_R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x08) }, reg1: None, ..Instruction::default() },
    0xD0u16 => Instruction {  name: "RET", addr_mode: AddrMode::R, func: ret, condition: Some(CondType::Nc), ..Instruction::default() },
    0xD1u16 => Instruction {  name: "POP", addr_mode: AddrMode::R16, func: pop, reg1: Some(CPURegisterId::DE), ..Instruction::default() },
    0xD2u16 => Instruction {  name: "JP", addr_mode: AddrMode::IMMADDR, func: jp, condition: Some(CondType::Nc), ..Instruction::default() },
    0xD4u16 => Instruction {  name: "CALL", addr_mode: AddrMode::IMMADDR, func: call, condition: Some(CondType::Nc), ..Instruction::default() },
    0xD5u16 => Instruction {  name: "PUSH", addr_mode: AddrMode::R16, func: push, reg1: Some(CPURegisterId::DE), ..Instruction::default() },
    0xD6u16 => Instruction {  name: "SUB", addr_mode: AddrMode::R_IMM, func: sub, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    0xD7u16 => Instruction {  name: "RST", addr_mode: AddrMode::R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x10) }, ..Instruction::default() },
    0xD8u16 => Instruction {  name: "RET", addr_mode: AddrMode::R, func: ret, condition: Some(CondType::C), ..Instruction::default() },
    0xD9u16 => Instruction {  name: "RETI", addr_mode: AddrMode::R, func: reti, ..Instruction::default() },
    0xDAu16 => Instruction {  name: "JP", addr_mode: AddrMode::IMMADDR, func: jp, condition: Some(CondType::C), ..Instruction::default() },
    0xDCu16 => Instruction {  name: "CALL", addr_mode: AddrMode::IMMADDR, func: call, condition: Some(CondType::C), ..Instruction::default() },
    0xDEu16 => Instruction {  name: "SBC", addr_mode: AddrMode::R_IMM, func: sbc, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    0xDFu16 => Instruction {  name: "RST", addr_mode: AddrMode::R_R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x18) }, reg1: None, ..Instruction::default() },
    0xE0u16 => Instruction {  name: "LDH", addr_mode: AddrMode::IMM_R, func: ldh, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0xE1u16 => Instruction {  name: "POP", addr_mode: AddrMode::R16, func: pop, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0xE2u16 => Instruction {  name: "LDH", addr_mode: AddrMode::RADDR_R, func: ldh, reg1: Some(CPURegisterId::C), reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0xE5u16 => Instruction {  name: "PUSH", addr_mode: AddrMode::R16, func: push, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0xE6u16 => Instruction {  name: "AND", addr_mode: AddrMode::R_IMM, func: and, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    0xE7u16 => Instruction {  name: "RST", addr_mode: AddrMode::R_R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x20) }, reg1: None, ..Instruction::default() },
    0xE8u16 => Instruction {  name: "ADD", addr_mode: AddrMode::R16_SIMM, func: add, reg1: Some(CPURegisterId::SP), reg2: None, ..Instruction::default() },
    0xE9u16 => Instruction {  name: "JP", addr_mode: AddrMode::R16, func: jp, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0xEAu16 => Instruction {  name: "LD", addr_mode: AddrMode::IMMADDR_R, func: ldm, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0xEEu16 => Instruction {  name: "XOR", addr_mode: AddrMode::R_IMM, func: xor, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    0xEFu16 => Instruction {  name: "RST", addr_mode: AddrMode::R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x28) }, reg1: None, ..Instruction::default() },
    0xF0u16 => Instruction {  name: "LDH", addr_mode: AddrMode::R_IMMADDR, func: ldh, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    0xF1u16 => Instruction {  name: "POP", addr_mode: AddrMode::R16, func: pop, reg1: Some(CPURegisterId::AF), ..Instruction::default() },
    0xF2u16 => Instruction {  name: "LDH", addr_mode: AddrMode::R_RADDR, func: ldh, reg1: Some(CPURegisterId::A), reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0xF3u16 => Instruction {  name: "DI", addr_mode: AddrMode::R_R, func: di, ..Instruction::default() },
    0xF5u16 => Instruction {  name: "PUSH", addr_mode: AddrMode::R16, func: push, reg1: Some(CPURegisterId::AF), ..Instruction::default() },
    0xF6u16 => Instruction {  name: "OR", addr_mode: AddrMode::R_IMM, func: or, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    0xF7u16 => Instruction {  name: "RST", addr_mode: AddrMode::R_R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x30) }, reg1: None, ..Instruction::default() },
    0xF8u16 => Instruction {  name: "LD", addr_mode: AddrMode::R16_R16_IMM, func: ldr, reg1: Some(CPURegisterId::HL), reg2: Some(CPURegisterId::SP), ..Instruction::default() },
    0xF9u16 => Instruction {  name: "LD", addr_mode: AddrMode::R16_R16, func: ldr, reg1: Some(CPURegisterId::SP), reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0xFAu16 => Instruction {  name: "LD", addr_mode: AddrMode::R_IMMADDR, func: ldr, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    0xFBu16 => Instruction {  name: "EI", addr_mode: AddrMode::R_R, func: ei, ..Instruction::default() },
    0xFEu16 => Instruction {  name: "CP", addr_mode: AddrMode::R_IMM, func: cp, reg1: Some(CPURegisterId::A), reg2: None, ..Instruction::default() },
    0xFFu16 => Instruction {  name: "RST", addr_mode: AddrMode::R_R, func: |cpu: &mut LR35902CPU| { rst(cpu, 0x38) }, reg1: None, ..Instruction::default() },
    0x100u16 => Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    0x101u16 => Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    0x102u16 => Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    0x103u16 => Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    0x104u16 => Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    0x105u16 => Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    0x106u16 => Instruction { name: "RLC", addr_mode: AddrMode::RADDR, func: rlc, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0x107u16 => Instruction { name: "RLC", addr_mode: AddrMode::R, func: rlc, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    0x108u16 => Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    0x109u16 => Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    0x10au16 => Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    0x10bu16 => Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    0x10cu16 => Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    0x10du16 => Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    0x10eu16 => Instruction { name: "RRC", addr_mode: AddrMode::RADDR, func: rrc, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0x10fu16 => Instruction { name: "RRC", addr_mode: AddrMode::R, func: rrc, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    0x110u16 => Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    0x111u16 => Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    0x112u16 => Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    0x113u16 => Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    0x114u16 => Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    0x115u16 => Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    0x116u16 => Instruction { name: "RL", addr_mode: AddrMode::RADDR, func: rl, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0x117u16 => Instruction { name: "RL", addr_mode: AddrMode::R, func: rl, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    0x118u16 => Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    0x119u16 => Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    0x11au16 => Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    0x11bu16 => Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    0x11cu16 => Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    0x11du16 => Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    0x11eu16 => Instruction { name: "RR", addr_mode: AddrMode::RADDR, func: rr, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0x11fu16 => Instruction { name: "RR", addr_mode: AddrMode::R, func: rr, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    0x120u16 => Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    0x121u16 => Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    0x122u16 => Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    0x123u16 => Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    0x124u16 => Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    0x125u16 => Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    0x126u16 => Instruction { name: "SLA", addr_mode: AddrMode::RADDR, func: sla, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0x127u16 => Instruction { name: "SLA", addr_mode: AddrMode::R, func: sla, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    0x128u16 => Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    0x129u16 => Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    0x12au16 => Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    0x12bu16 => Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    0x12cu16 => Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    0x12du16 => Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    0x12eu16 => Instruction { name: "SRA", addr_mode: AddrMode::RADDR, func: sra, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0x12fu16 => Instruction { name: "SRA", addr_mode: AddrMode::R, func: sra, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    0x130u16 => Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    0x131u16 => Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    0x132u16 => Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    0x133u16 => Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    0x134u16 => Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    0x135u16 => Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    0x136u16 => Instruction { name: "SWAP", addr_mode: AddrMode::RADDR, func: swap, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0x137u16 => Instruction { name: "SWAP", addr_mode: AddrMode::R, func: swap, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    0x138u16 => Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::B), ..Instruction::default() },
    0x139u16 => Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::C), ..Instruction::default() },
    0x13au16 => Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::D), ..Instruction::default() },
    0x13bu16 => Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::E), ..Instruction::default() },
    0x13cu16 => Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::H), ..Instruction::default() },
    0x13du16 => Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::L), ..Instruction::default() },
    0x13eu16 => Instruction { name: "SRL", addr_mode: AddrMode::RADDR, func: srl, reg1: Some(CPURegisterId::HL), ..Instruction::default() },
    0x13fu16 => Instruction { name: "SRL", addr_mode: AddrMode::R, func: srl, reg1: Some(CPURegisterId::A), ..Instruction::default() },
    0x140u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x141u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x142u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x143u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x144u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x145u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x146u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x147u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x148u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x149u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x14au16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x14bu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x14cu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x14du16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x14eu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x14fu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x150u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x151u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x152u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x153u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x154u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x155u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x156u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x157u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x158u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x159u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x15au16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x15bu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x15cu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x15du16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x15eu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x15fu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x160u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x161u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x162u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x163u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x164u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x165u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x166u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x167u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x168u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x169u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x16au16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x16bu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x16cu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x16du16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x16eu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x16fu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x170u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x171u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x172u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x173u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x174u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x175u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x176u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x177u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x178u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x179u16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x17au16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x17bu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x17cu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x17du16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x17eu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x17fu16 => Instruction { name: "BIT", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { bit(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x180u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x181u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x182u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x183u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x184u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x185u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x186u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x187u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x188u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x189u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x18au16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x18bu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x18cu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x18du16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x18eu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x18fu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x190u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x191u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x192u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x193u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x194u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x195u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x196u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x197u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x198u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x199u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x19au16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x19bu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x19cu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x19du16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x19eu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x19fu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x1a0u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x1a1u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x1a2u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x1a3u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x1a4u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x1a5u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x1a6u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x1a7u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x1a8u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x1a9u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x1aau16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x1abu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x1acu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x1adu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x1aeu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x1afu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x1b0u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x1b1u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x1b2u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x1b3u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x1b4u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x1b5u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x1b6u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x1b7u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x1b8u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x1b9u16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x1bau16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x1bbu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x1bcu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x1bdu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x1beu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x1bfu16 => Instruction { name: "RES", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { res(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x1c0u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x1c1u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x1c2u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x1c3u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x1c4u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x1c5u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x1c6u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x1c7u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 0) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x1c8u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x1c9u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x1cau16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x1cbu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x1ccu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x1cdu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x1ceu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x1cfu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 1) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x1d0u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x1d1u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x1d2u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x1d3u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x1d4u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x1d5u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x1d6u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x1d7u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 2) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x1d8u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x1d9u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x1dau16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x1dbu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x1dcu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x1ddu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x1deu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x1dfu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 3) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x1e0u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x1e1u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x1e2u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x1e3u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x1e4u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x1e5u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x1e6u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x1e7u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 4) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x1e8u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x1e9u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x1eau16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x1ebu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x1ecu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x1edu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x1eeu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x1efu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 5) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x1f0u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x1f1u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x1f2u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x1f3u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x1f4u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x1f5u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x1f6u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x1f7u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 6) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
    0x1f8u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::B), ..Instruction::default() },
    0x1f9u16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::C), ..Instruction::default() },
    0x1fau16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::D), ..Instruction::default() },
    0x1fbu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::E), ..Instruction::default() },
    0x1fcu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::H), ..Instruction::default() },
    0x1fdu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::L), ..Instruction::default() },
    0x1feu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_RADDR, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::HL), ..Instruction::default() },
    0x1ffu16 => Instruction { name: "SET", addr_mode: AddrMode::IMM_R, func: |cpu: &mut LR35902CPU| { set(cpu, 7) }, reg1: None, reg2: Some(CPURegisterId::A), ..Instruction::default() },
};
